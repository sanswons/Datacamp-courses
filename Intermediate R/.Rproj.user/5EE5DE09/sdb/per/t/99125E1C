{
    "contents" : "# Consult the documentation on the mean() function\n?mean\n\n# Inspect the arguments of the mean() function\nargs(mean)\n\n\n# The linkedin and facebook vectors have already been created for you\nlinkedin <- c(16, 9, 13, 5, 2, 17, 14)\nfacebook <- c(17, 7, 5, 16, 8, 13, 14)\n\n# Calculate average number of views\navg_li = mean(linkedin)\navg_fb = mean(facebook)\n\n# Inspect avg_li and avg_fb\navg_li\navg_fb\n\n# Calculate the mean of linkedin minus facebook\nmean(linkedin-facebook)\n\n\n# The linkedin and facebook vectors have already been created for you\nlinkedin <- c(16, 9, 13, 5, 2, 17, 14)\nfacebook <- c(17, 7, 5, 16, 8, 13, 14)\n\n# Calculate the mean of the sum\navg_sum = mean(linkedin+facebook)\n\n# Calculate the trimmed mean of the sum\navg_sum_trimmed = mean(linkedin+facebook, trim = 0.2)\n\n# Inspect both new variables\navg_sum\navg_sum_trimmed\n\n\n# The linkedin and facebook vectors have already been created for you\nlinkedin <- c(16, 9, 13, 5, NA, 17, 14)\nfacebook <- c(17, NA, 5, 16, 8, 13, 14)\n\n# Basic average of linkedin\nmean(linkedin)\n\n# Advanced average of facebook\nmean(facebook, na.rm = TRUE)\n\n\n# The linkedin and facebook vectors have already been created for you\nlinkedin <- c(16, 9, 13, 5, NA, 17, 14)\nfacebook <- c(17, NA, 5, 16, 8, 13, 14)\n\n# Calculate the mean absolute deviation\nmean(abs(mean(linkedin-facebook, na.rm = T)-(linkedin-facebook)),na.rm = T)\n\n\n\n# Create a function pow_two()\npow_two = function(x){\n      x*x\n}\n\n# Use the function \npow_two(2)\n\n# Create a function sum_abs()\nsum_abs = function(a,b){\n      abs(a)+abs(b)\n}\n\n# Use the function\nsum_abs(-2,3)\n\n\n# Define the function hello()\nhello = function(){\n      print(\"Hello\")\n      return(TRUE)\n}\n\n# Call the function hello()\nhello()\n\n# Define the function my_filter()\nmy_filter = function(z){\n      if(z>0){\n            return(z)\n      } else {\n            return(NULL)\n      }\n      \n}\n# Call the function my_filter() twice\n\nmy_filter(5)\nmy_filter(-5)\n\n\n\n# Extend the pow_two() function\npow_two <- function(x, print_info = TRUE) {\n      if (print_info==TRUE){\n            print(paste(x , \"to the power of two equals\", x^2))\n      }\n      x ^ 2\n}\n\npow_two(4, FALSE)\n\n\npow_two <- function(x) {\n      y <- x ^ 2\n      return(y)\n}\npow_two(4)\ny\nx\n\ntwo_dice <- function() {\n      possibilities <- 1:6\n      dice1 <- sample(possibilities, size = 1)\n      dice2 <- sample(possibilities, size = 1)\n      dice1 + dice2\n}\ntwo_dice()\nres = two_dice()\nres\ndice1\n\n\n\ntriple <- function(x) {\n      x <- 3*x\n      x\n}\na <- 5\ntriple(a)\na\n\n\n\nincrement <- function(x, inc = 1) {\n      x <- x + inc\n      x\n}\ncount <- 5\na <- increment(count, 2)\nb <- increment(count)\ncount <- increment(count, 2)\n\n\n\nlinkedin <- c(16, 9, 13, 5, 2, 17, 14)\nfacebook <- c(17, 7, 5, 16, 8, 13, 14)\n# The linkedin and facebook vectors have already been created for you\n\n# Define the interpret function\ninterpret = function(x){\n      if(x>15){\n            print(\"You're popular!\")\n            return(x)\n      }else{\n            print(\"Try to be more visible!\")\n            return(0)\n      }\n}\n\n# Call the interpret function twice\ninterpret(linkedin[1])\ninterpret(facebook[2])\n\n\n\n\n# The linkedin and facebook vectors have already been created for you\nlinkedin <- c(16, 9, 13, 5, 2, 17, 14)\nfacebook <- c(17, 7, 5, 16, 8, 13, 14)\n\n# The interpret() can be used inside interpret_all()\ninterpret <- function(num_views) {\n      if (num_views > 15) {\n            print(\"You're popular!\")\n            return(num_views)\n      } else {\n            print(\"Try to be more visible!\")\n            return(0)\n      }\n}\n\n# Define the interpret_all() function\ninterpret_all = function(v, r=TRUE){ \n      total = 0\n      for (i in v){\n            x = interpret(i)\n            total=total+x\n      }\n      if(r==TRUE){\n            return(total)\n      }else{\n            return(NULL)\n      }\n}\n\ninterpret_all(linkedin)\ninterpret_all(facebook)\n\n\n\n# The mtcars vectors have already been prepared for you\nwt <- mtcars$wt\nhp <- mtcars$hp\n\n# Request the currently attached packages\nsearch()\n\n# Try the qplot() function with wt and hp\nqplot(wt,hp)\n\n# Load the ggplot2 package\nlibrary(ggplot2)\n\n# Retry the qplot() function\nqplot(wt,hp)\n\n\n# Check out the currently attached packages again\nsearch()\n\n\n# Chunk 1\nlibrary(data.table)\nrequire(ggvis)\n\n# Chunk 2\nlibrary(\"data.table\")\nrequire(ggvis)\n\n# Chunk 3\nlibrary(data.table)\nrequire(ggvis, character.only = TRUE)\n\n# Chunk 4\nlibrary(c(\"data.table\", \"ggvis\"))\n\n\n\n\n\n\n\n",
    "created" : 1454263794708.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2858791708",
    "id" : "99125E1C",
    "lastKnownWriteTime" : 1454825550,
    "path" : "F:/sanjana/books/CSE/Machine Learning/Data Camp/Practice/Datacamp-courses/Intermediate R/Functions.R",
    "project_path" : "Functions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}