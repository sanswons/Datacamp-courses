{
    "contents" : "abs(-9)\nround(-1.1)\nsum(1,3,5)\nmean(c(16,67))\nsort(rep(seq(89,18, by = -6), times = 2))\n\n\n# The errors vector has already been defined for you\nerrors <- c(1.9,-2.6,4.0,-9.5,-3.4,7.3)\n\n# Sum of absolute rounded values of errors\nsum(abs(round(errors)))\n\n\n\n# Don't edit these two lines\nvec1 <- c(1.5,2.5,8.4,3.7,6.3)\nvec2 <- rev(vec1)\nvec2\n# Fix the error\nmean(c(abs(vec1), abs(vec2)))\n\n\n\n# The linkedin and facebook vectors have already been created for you\nlinkedin <- list(16, 9, 13, 5, 2, 17, 14)\nfacebook <- list(17, 7, 5, 16, 8, 13, 14)\n\n# Convert linkedin and facebook to a vector: li_vec and fb_vec\nli_vec = unlist(linkedin)\nfb_vec = unlist(facebook)\nli_vec\n# Append fb_vec to li_vec: social_vec\nsocial_vec = append(li_vec, fb_vec)\nsocial_vec\n# Sort social_vec\nsort(social_vec)\n\n\n\n# Fix me\nsum(round(unlist(list(1.1,3,5))))\n# Fix me\nrep(seq(1, 7, by = 2), times = 7)\n\n\n\n# Create first sequence: seq1\nseq1 = seq(1,500,by=3)\n\n# Create second sequence: seq2\nseq2 = seq(1200, 900, by=-7)\n\n# Calculate total sum of the sequences\nsum(c(seq1,seq2))\n\n\n\nSys.Date()\nSys.time()\nas.Date(\"1996-02-29\")\n\n\n# Get the current date: today\ntoday = Sys.Date()\n\n# See what today looks like under the hood\nunclass(today)\n\n# Get the current time: now\nnow = Sys.time()\n\n# See what now looks like under the hood\nunclass(now)\n\n\n# Definition of character strings representing dates\nstr1 <- \"May 23, '96\"\nstr2 <- \"2012-3-15\"\nstr3 <- \"30/January/2006\"\n\n# Convert the strings to dates: date1, date2, date3\ndate1 <- as.Date(str1, format = \"%b %d, '%y\")\ndate2 <- as.Date(str2, format =  \"%Y-%m-%d\")\ndate3 <- as.Date(str3, format =  \"%d/%B/%Y\")\n\n# Convert dates to formatted strings\nformat(date1, \"%A\")\nformat(date2, \"%d\")\nformat(date3, \"%b %Y\")\n\n\n\n# Definition of character strings representing times\nstr1 <- \"May 23, '96 hours:23 minutes:01 seconds:45\"\nstr2 <- \"2012-3-12 14:23:08\"\n\n# Convert the strings to POSIXct objects: time1, time2\ntime1 <- as.POSIXct(str1, format = \"%B %d, '%y hours:%H minutes:%M seconds:%S\")\ntime1\ntime2 <- as.POSIXct(str2, format = \"%Y-%m-%d %T\")\ntime2\n# Convert times to formatted strings\nformat(time1, format = \"%M\")\nformat(time2, format = \"%I:%M %p\")\n\n\n\n# day1, day2, day3, day4 and day5 are already available in the workspace\nday1\nclass(day1)\n# Difference between last and first pizza day\nday5-day1\n\n# Create vector pizza\npizza = c(day1,day2,day3,day4,day5)\n\n# Create differences between consecutive pizza days: day_diff\nday_diff = diff(pizza)\n\n# Average period between two consecutive pizza days\nmean(day_diff)\n\n\n\n# login and logout are already defined in the workspace\nlogin\nlogout\n# Calculate the difference between login and logout: time_online\ntime_online = abs(login  - logout)\n\n# Inspect the variable time_online\ntime_online\n\n# Calculate the total time online\nsum(time_online)\n\n# Calculate the average time online\nmean(time_online)\n\n\n\n# Convert astro to vector of Date objects: astro_dates\nastro\nastro_dates = as.Date(astro, format = \"%d-%b-%Y\")\n\n# Convert meteo to vector of Date objects: meteo_dates\nmeteo\nmeteo_dates = as.Date(meteo, format = \"%B %d, %y\")\n\n# Calculate the maximum absolute difference between astro_dates and meteo_dates\nmax(abs(meteo_dates - astro_dates))\n",
    "created" : 1456119200914.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2153580202",
    "id" : "3DAEB7DA",
    "lastKnownWriteTime" : 1456235487,
    "path" : "F:/sanjana/books/CSE/Machine Learning/Data Camp/Practice/Datacamp-courses/Intermediate R/Utilities.R",
    "project_path" : "Utilities.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}