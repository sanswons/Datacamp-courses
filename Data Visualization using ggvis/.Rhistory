faithful %>% compute_bin(x_var = ~waiting,width = 5) %>% layer_rects(x=42.5,x2=47.5,y=0,y=13) %>% ggvis()
faithful %>% compute_bin(x_var = ~waiting,width = 5) %>% layer_rects(x=c(42.5,47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5),x2=c(47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,97.5),y=c(0,0,0,0,0,0,0,0,0,0,0),y=c(13,24,29,21,13,13,42,58,38,17,4)) %>% ggvis()
faithful %>% compute_bin(x_var = ~waiting,width = 5) %>% layer_rects() %>% ggvis(x=c(42.5,47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5),x2=c(47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,97.5),y=c(0,0,0,0,0,0,0,0,0,0,0),y=c(13,24,29,21,13,13,42,58,38,17,4))
faithful %>% compute_bin(x_var = ~waiting,width = 5) %>% layer_rects() %>% ggvis()
faithful %>% compute_bin(x_var = ~waiting,width = 5) %>% layer_rects() %>% ggvis(x=42.5)
?layer_rects
faithful %>% compute_bin(x_var = ~waiting,width = 5) %>% layer_rects() %>% ggvis(x=42.5,x2=97.5,width=5,y2=0,y=c(13,24,29,21,13,13,42,58,38,17,4))
faithful %>% compute_bin(x_var = ~waiting,width = 5) %>% layer_rects() %>% ggvis(x=42.5,x2=97.5,y2=0,y=c(13,24,29,21,13,13,42,58,38,17,4))
faithful %>% compute_bin(x_var = ~waiting,width=5) %>% ggvis(width = 5,x=42.5,x2=97.5,y=0,y2=13)%>%layer_rects()
faithful %>% compute_bin(x_var = ~waiting,width=5) %>% ggvis(width = 5,x=42.5,47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,x2=97.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,97.5,y=0,0,0,0,0,0,0,0,0,0,0,y2=13,24,29,21,13,13,42,58,38,17,4)%>%layer_rects()
faithful %>% compute_bin(x_var = ~waiting,width=5) %>% ggvis(width = 5,x=(42.5,47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5),x2=97.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,97.5,y=0,0,0,0,0,0,0,0,0,0,0,y2=13,24,29,21,13,13,42,58,38,17,4)%>%layer_rects()
faithful %>% compute_bin(x_var = ~waiting,width=5) %>% ggvis(width = 5,x=list(42.5,47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5),x2=list(97.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,97.5),y=list(0,0,0,0,0,0,0,0,0,0,0),y2=list(13,24,29,21,13,13,42,58,38,17,4))%>%layer_rects()
df=data.frame(x=c(42.5,47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5),x2=c(47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,97.5),y=c(0,0,0,0,0,0,0,0,0,0,0),y=c(13,24,29,21,13,13,42,58,38,17,4))
faithful %>% df %>% compute_bin(x_var = ~waiting,width=5) %>% ggvis(width = 5,x=~xmin_,x2=~xmax_,y2=count_)%>%layer_rects()
faithful %>% compute_bin(x_var = ~waiting,width=5) %>% ggvis(width = 5,x=~xmin_,x2=~xmax_,y2=count_)%>%layer_rects()
faithful %>% compute_bin(x_var = ~waiting,width=5) %>% ggvis(width = 5,x=~xmin_,x2=~xmax_,y2=~count_)%>%layer_rects()
faithful %>% compute_bin(x_var = ~waiting,width=5) %>% ggvis(width = 5,x=~xmin_,x2=~xmax_,y2=~count_,y=0)%>%layer_rects()
faithful %>% compute_density(faithful,waiting)%>% layer_lines()
faithful %>% compute_density(faithful,waiting)%>% layer_lines(x=~pred_,y=~resp_)
faithful %>% compute_density(faithful,xvar = ~waiting) %>% layer_lines(x=~pred_,y=~resp_)
faithful %>% compute_density(xvar = ~waiting) %>% layer_lines(x=~pred_,y=~resp_)
?compute_density
faithful %>% compute_density(faithful, x_var = ~waiting) %>% layer_lines(x=~pred_,y=~resp_)
faithful %>% compute_density(x_var = ~waiting) %>% layer_lines(x=~pred_,y=~resp_)
faithful %>% ggvis()%>%compute_density(x_var = ~waiting) %>% layer_lines(x=~pred_,y=~resp_)
faithful %>% compute_density(x_var = ~waiting)%>% ggvis() %>% layer_lines(x=~pred_,y=~resp_)
faithful %>% compute_density(x_var = ~waiting)%>% ggvis(x=~waiting) %>% layer_lines(x=~pred_,y=~resp_)
faithful %>% compute_density(x_var = ~waiting)%>% ggvis(x = "waiting") %>% layer_lines(x=~pred_,y=~resp_)
faithful %>% compute_density(x_var = ~waiting)%>% ggvis(x = ~waiting) %>% layer_lines(x=~pred_,y=~resp_)
faithful %>% compute_density(x_var = ~waiting)%>% ggvis(x = ~waiting) %>% layer_lines()
faithful %>% compute_density(x_var = ~waiting)%>% layer_lines()
faithful %>% compute_density(x_var = ~waiting)%>%ggvis(~waiting) layer_lines()
faithful %>% compute_density(x_var = ~waiting)%>%ggvis(~waiting) %>%layer_lines()
faithful %>% compute_density() %>% ggvis(~waiting) %>%layer_lines()
faithful %>% compute_density(x_var=~waiting) %>% ggvis(~waiting) %>%layer_lines()
faithful %>% compute_density(x_var=~waiting) %>% ggvis(~pred_, ~resp_) %>%layer_lines()
faithful %>% layer_densities(fill = "green") %>% ggvis(~pred_, ~resp_)
faithful %>% layer_densities(fill = "green") %>% ggvis(~waiting)
faithful %>% layer_densities() %>% ggvis(~waiting,fill="green")
faithful %>% ggvis(~waiting,fill="green") %>% layer_densities()
faithful %>% ggvis(~waiting,fill:="green") %>% layer_densities()
mtcars %>% ggvis(~factor(cyl))
mtcars %>% ggvis(~factor(cyl))%>% layer_bars()
mtcars %>% compute_count(x_var=factor(cyl))
mtcars %>% compute_count(x_var=~factor(cyl))
mtcars %>% group_by(cyl) %>% ggvis(~mpg, ~wt, stroke = ~factor(cyl)) %>% layer_smooths()
mtcars %>% group_by(cyl)%>%ggvis(~mpg) %>% layer_densities()
mtcars %>% group_by(cyl)%>%ggvis(~mpg, fill=factor(cyl)) %>% layer_densities()
mtcars %>% group_by(cyl)%>%ggvis(~mpg, fill=~factor(cyl)) %>% layer_densities()
mtcars %>% group_by(cyl, am) %>% ggvis(~mpg, fill = ~factor(cyl)) %>% layer_densities()
mtcars %>% group_by(cyl, am) %>% ggvis(~mpg, fill =interaction( ~factor(cyl),~factor(am))) %>% layer_densities()
mtcars %>% group_by(cyl, am) %>% ggvis(~mpg, fill =~interaction(factor(cyl),factor(am))) %>% layer_densities()
mtcars %>% group_by(cyl, am) %>% ggvis(~mpg, fill :=~interaction(factor(cyl),factor(am))) %>% layer_densities()
mtcars %>% group_by(cyl, am) %>% ggvis(~mpg, fill = ~interaction(factor(cyl),factor(am)) ) %>% layer_densities()
mtcars %>% group_by(cyl, am) %>% ggvis(~mpg, fill= ~interaction(cyl,am) ) %>% layer_densities()
faithful %>%
ggvis(~waiting, ~eruptions, fillOpacity := 0.5,
shape := input_select(label = "Choose shape:",
choices = c("circle", "square", "cross", "diamond",
"triangle-up", "triangle-down"))) %>%
layer_points()
faithful %>%
ggvis(~waiting, ~eruptions, fillOpacity := 0.5,
shape := input_select(label = "Choose shape:",
choices = c("circle", "square", "cross", "diamond",
"triangle-up", "triangle-down")),
fill := input_select(label = "Choose color:",
choices = c("black","red","blue","green"))) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill := radioButtons(label = "Choose color:",
choices = c("black","red","blue","green"))) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill := radioButtons("input",label = "Choose color:",
choices = c("black","red","blue","green"))) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill := radioButtons("input",
label = "Choose color:"
,choices = c("black","red","blue","green"))) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill := input_radioButtons("input",
label = "Choose color:"
,choices = c("black","red","blue","green"))) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill := input_radiobuttons("input",
label = "Choose color:"
,choices = c("black","red","blue","green"))) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill := input_text(label = "Choose color:",
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill := input_text("input",label = "Choose color:",
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill := input_text("black",label = "Choose color:",
)) %>%
layer_points()
# Map the fill property to a select box that returns variable names
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map = as.name(choices),
fill := map)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map = as.name(choices)
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map = as.name()
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map = as.name( names(mtcars))
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map=as.name
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map=as.name(fill)
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map=as.name(names(mtcars))
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map=as.name(names(mtcars))
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = as.name(names(mtcars))
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars)
)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = as.name(names(mtcars))
)) %>%
layer_points()
# Map the fill property to a select box that returns variable names
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = (names(mtcars)))) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
)
) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map = as.name)
) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map = as.name(fill))
) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill:=input_select(label="Choose fill variable:",
choices = names(mtcars),
map = as.name)) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~wt,
fill=input_select(label="Choose fill variable:",
choices = names(mtcars),
map = as.name)) %>%
layer_points()
# Map the bindwidth to a numeric field ("Choose a binwidth:")
mtcars %>%
ggvis(~mpg,
width = input_numeric(label="Choose a binwidth:")) %>%
layer_histograms(width = 2)
mtcars %>%
ggvis(~mpg,
width = input_numeric(id = "width",
label="Choose a binwidth:",
value = 1)) %>%
layer_histograms(width = 2)
mtcars %>%
ggvis(~mpg,
width = input_numeric(id = "width",
label="Choose a binwidth:",
value = 1)) %>%
layer_histograms()
# Map the bindwidth to a numeric field ("Choose a binwidth:")
mtcars %>%
ggvis(~mpg,
width := input_numeric(id = "width",
label="Choose a binwidth:",
value = 1)) %>%
layer_histograms()
# Map the binwidth to a slider bar ("Choose a binwidth:") with the correct specifications
mtcars %>%
ggvis(~mpg,
width = input_slider(1,20)) %>%
layer_histograms()
pressure %>%
ggvis(~temperature, ~pressure, stroke := "skyblue") %>%
layer_lines() %>%
layer_points()
pressure %>%
ggvis(~temperature, ~pressure, stroke := "skyblue") %>%
layer_lines()
pressure %>%
ggvis(~temperature, ~pressure) %>%
layer_lines(stroke := "skyblue") %>%
layer_points(shape := "triangle-up")
pressure %>%
ggvis(~temperature, ~pressure,
strokeOpacity := 0.5,
stroke := "skyblue",
strokeWidth := 5) %>%
layer_lines() %>%
layer_points( fill = ~temperature,
shape := "triangle-up",
size := 300)
pressure %>%
ggvis(~temperature, ~pressure ) %>%
layer_lines(stroke := "skyblue") %>%
layer_points()
pressure %>% ggvis(~temperature,~pressure) %>%
layer_lines(stroke:="black",
strokeOpacity = 0.5)
pressure %>% ggvis(~temperature,~pressure) %>%
layer_lines(stroke:="black",
strokeOpacity := 0.5)
pressure %>% ggvis(~temperature,~pressure) %>%
layer_lines(stroke:="black",
opacity := 0.5)
pressure %>% ggvis(~temperature,~pressure) %>%
layer_points(fill:="black",
opacity := 0.5)
pressure %>% ggvis(~temperature,~pressure) %>%
layer_points()%>%
layer_lines(fill:="black",
opacity := 0.5)
pressure %>% ggvis(~temperature,~pressure) %>%
layer_points()%>%
layer_lines(stroke:="black",
opacity := 0.5)
pressure %>% ggvis(~temperature,~pressure) %>%
layer_points()%>%
layer_lines(stroke:="black",
opacity := 0.5)%>%
layer_model_predictions(model="lm",
fill:="blue")
pressure %>% ggvis(~temperature,~pressure) %>%
layer_points()%>%
layer_lines(stroke:="black",
opacity := 0.5)%>%
layer_model_predictions(model="lm",
fill:="navy")
pressure %>% ggvis(~temperature,~pressure) %>%
layer_points()%>%
layer_lines(stroke:="black",
opacity := 0.5)%>%
layer_model_predictions(model="lm",
fill:="navy")%>%
layer_smooths(stroke:="skyblue")
pressure %>% ggvis(~temperature,~pressure) %>%
layer_points()%>%
layer_lines(stroke:="black",
opacity := 0.5)%>%
layer_model_predictions(model="lm",
stroke:="navy")%>%
layer_smooths(stroke:="skyblue")
pressure %>%
ggvis(~temperature, ~pressure, shape := "circle") %>%
layer_lines(stroke := "orange", strokeDash := 5, strokeWidth := 5) %>%
layer_points(size := 100, fill := "lightgreen") %>%
layer_smooths(stroke := "darkred")
pressure %>%
ggvis(~temperature, ~pressure, stroke := "darkred") %>%
layer_lines( strokeDash := 5, strokeWidth := 5) %>%
layer_points(size := 100, fill := "lightgreen",shape := "circle") %>%
layer_smooths()
faithful %>%
ggvis(~waiting, ~eruptions) %>%
layer_points() %>%
add_axis("y", title = "Duration of eruption (m)")%>%
add_axis("x", title = "Time since previous eruption (m)")
faithful %>%
ggvis(~waiting, ~eruptions) %>%
layer_points() %>%
add_axis("y", title = "Duration of eruption (m)",
values = c(50, 60, 70, 80, 90), subdivide = 9) %>%
add_axis("x", title = "Time since previous eruption (m)")
# Add to the code to place a labelled tick mark at 50, 60, 70, 80, 90 on the x axis.
faithful %>%
ggvis(~waiting, ~eruptions) %>%
layer_points() %>%
add_axis("y", title = "Duration of eruption (m)",
values = c(2, 3, 4, 5), subdivide = 9) %>%
add_axis("x", title = "Time since previous eruption (m)",
values = c(50,60,70,80,90), subdivide = 9)
faithful %>%
ggvis(~waiting, ~eruptions) %>%
layer_points() %>%
add_axis("y", title = "Duration of eruption (m)",
values = c(2, 3, 4, 5), subdivide = 9) %>%
add_axis("x", title = "Time since previous eruption (m)",
values = c(50,60,70,80,90), subdivide = 5)
faithful %>%
ggvis(~waiting, ~eruptions) %>%
layer_points()%>%
add_axis("x",orient="top")%>%
add_axis("y",orient="right")
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions))) %>%
layer_points()%>%
add_legend(title=" ~ duration (m)")
#-----------------------------------------------------
# Add a legend to the plot below: use the correct title and orientation
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions))) %>%
layer_points()%>%
add_legend(c("title=",title=~duration (m)))
#-----------------------------------------------------
# Add a legend to the plot below: use the correct title and orientation
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions))) %>%
layer_points()%>%
add_legend(c("title",title=~duration (m), orient="left"))
#-----------------------------------------------------
# Add a legend to the plot below: use the correct title and orientation
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions))) %>%
layer_points()%>%
add_legend(c("title",title="~duration (m)", orient="left"))
#-----------------------------------------------------
# Add a legend to the plot below: use the correct title and orientation
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions))) %>%
layer_points()%>%
add_legend("title",title="~duration (m)", orient="left")
#-----------------------------------------------------
# Add a legend to the plot below: use the correct title and orientation
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions))) %>%
layer_points()%>%
add_legend("title",title="~duration (m)", orient="left")
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("title","opacity","fill","shape","size"),title="~duration (m)")
# Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("title"),title="~duration (m)",values=c(2,3,4,5))
# Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("title"),title="~duration (m)")
# Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("title"),title="~duration (m)",scales=c(2,3,4,5))
# Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("title"),title="~duration (m)",values=c(2,3,4,5))
# Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("fill","shape","size","title"),title="~duration (m)",scales=c(2,3,4,5))
Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("fill","shape","size"),title="~duration (m)",scales=c(2,3,4,5))
# Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("fill","shape","size"),
title="~duration (m)",values=c(2,3,4,5))
# Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(
title="~duration (m)",values=c(2,3,4,5))
# Use add_legend() to combine the legends in the plot below. Adjust its properties as instructed.
faithful %>%
ggvis(~waiting, ~eruptions, opacity := 0.6,
fill = ~factor(round(eruptions)), shape = ~factor(round(eruptions)),
size = ~round(eruptions))  %>%
layer_points()%>%
add_legend(c("fill","shape","size"),
title="~duration (m)",values=c(2,3,4,5))
# Add a scale_numeric() function to the code below to make the stroke color range from "darkred" to "orange".
mtcars %>%
ggvis(~wt, ~mpg, fill = ~disp, stroke = ~disp, strokeWidth := 2) %>%
layer_points() %>%
scale_numeric("fill", range = c("red", "yellow"))%>%
scale_numeric("stroke", range=c("darkred","orange"))
mtcars %>% ggvis(~wt, ~mpg, fill = ~hp) %>%
layer_points() %>%
scale_numeric("fill",range=c("green","beige"))
# Create a scale that will map factor(cyl) to a new range of colors: purple, blue, and green.
mtcars %>% ggvis(~wt, ~mpg, fill = ~factor(cyl)) %>%
layer_points()%>%
scale_nominal("fill",range=c("purple","blue","green"))
# Add a scale that limits the range of opacity from 0.2 to 1.
mtcars %>% ggvis(x = ~wt, y = ~mpg, fill = ~factor(cyl), opacity = ~hp) %>%
layer_points()%>%
scale_numeric("opacity",range=c(0.2,1))
mtcars$hp
# Add a second scale that will expand the x axis to cover data values from 0 to 6.
mtcars %>% ggvis(~wt, ~mpg, fill = ~disp) %>%
layer_points() %>%
scale_numeric("y", domain = c(0, NA))%>%
scale_numeric("x",range=c(0,6))
# Add a second scale that will expand the x axis to cover data values from 0 to 6.
mtcars %>% ggvis(~wt, ~mpg, fill = ~disp) %>%
layer_points() %>%
scale_numeric("y", domain = c(0, NA))%>%
scale_numeric("x",domain=c(0,6))
# Set the fill value to the color variable instead of mapping it, and see what happens
mtcars$color <- c("red", "teal", "#cccccc", "tan")
mtcars %>% ggvis(x = ~wt, y = ~mpg, fill = color) %>% layer_points()
